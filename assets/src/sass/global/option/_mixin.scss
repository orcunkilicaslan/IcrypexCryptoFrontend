// Cross browser CSS3 mixins
@mixin box-shadow($left, $top, $radius, $color) {
  box-shadow: $left $top $radius $color;
  -o-box-shadow: $left $top $radius $color;
  -ms-box-shadow: $left $top $radius $color;
  -moz-box-shadow: $left $top $radius $color;
  -webkit-box-shadow: $left $top $radius $color;
  -khtml-box-shadow: $left $top $radius $color;
}

@mixin border-radius($radius) {
  border-radius: $radius;
  -o-border-radius: $radius;
  -ms-border-radius: $radius;
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  -khtml-border-radius: $radius;
}

@mixin border-radii($topleft, $topright, $bottomright, $bottomleft) {
  border-top-left-radius: $topleft;
  border-top-right-radius: $topright;
  border-bottom-right-radius: $bottomright;
  border-bottom-left-radius: $bottomleft;
  -webkit-border-top-left-radius: $topleft;
  -webkit-border-top-right-radius: $topright;
  -webkit-border-bottom-right-radius: $bottomright;
  -webkit-border-bottom-left-radius: $bottomleft;
  -moz-border-radius-topleft: $topleft;
  -moz-border-radius-topright: $topright;
  -moz-border-radius-bottomright: $bottomright;
  -moz-border-radius-bottomleft: $bottomleft;
}

@mixin gradient($color1, $color2) {
  background-color: $color1;
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#{$color1}, endColorstr=#{$color2});
  background-image: -moz-linear-gradient(center top, $color1, $color2);
  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($color1), to($color2));
}

@mixin transition($property, $duration, $easing: linear) {
  transition: $property $duration $easing;
  -o-transition: $property $duration $easing;
  -ms-transition: $property $duration $easing;
  -moz-transition: $property $duration $easing;
  -webkit-transition: $property $duration $easing;
  -khtml-transition: $property $duration $easing;
}

@mixin transition-multiple($transitionmultiple...) {
  transition: $transitionmultiple;
  -o-transition: $transitionmultiple;
  -ms-transition: $transitionmultiple;
  -moz-transition: $transitionmultiple;
  -webkit-transition: $transitionmultiple;
  -khtml-transition: $transitionmultiple;
}

@mixin transition-property($property...) {
  transition-property: $property;
  -o-transition-property: $property;
  -ms-transition-property: $property;
  -moz-transition-property: $property;
  -webkit-transition-property: $property;
  -khtml-transition-property: $property;

}
@mixin transition-duration($duration...) {
  transition-property: $duration;
  -o-transition-property: $duration;
  -ms-transition-property: $duration;
  -moz-transition-property: $duration;
  -webkit-transition-property: $duration;
  -khtml-transition-property: $duration;
}
@mixin transition-timing-function($timing...) {
  transition-timing-function: $timing;
  -o-transition-timing-function: $timing;
  -ms-transition-timing-function: $timing;
  -moz-transition-timing-function: $timing;
  -webkit-transition-timing-function: $timing;
  -khtml-transition-timing-function: $timing;
}
@mixin transition-delay($delay...) {
  transition-delay: $delay;
  -o-transition-delay: $delay;
  -ms-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -webkit-transition-delay: $delay;
  -khtml-transition-delay: $delay;
}

@mixin transform($transforms) {
  transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -moz-transform: $transforms;
  -webkit-transform: $transforms;
  -khtml-transform: $transforms;
}

@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

@mixin scale($scale) {
  @include transform(scale($scale));
}

@mixin scaleX($scaleX) {
  @include transform(scaleX($scaleX));
}

@mixin scaleY($scaleY) {
  @include transform(scaleY($scaleY));
}

@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}

@mixin translateX ($x) {
  @include transform(translateX($x));
}

@mixin translateY ($y) {
  @include transform(translateY($y));
}

@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}

@mixin transform-origin ($origin) {
  transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  -khtml-transform-origin: $origin;
}

@mixin blur ($radius) {
  filter: blur($radius+px) !important;
  filter: url('data:image/svg+xml;utf8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg"><filter id="blur"><feGaussianBlur stdDeviation="#{$radius}" /></filter></svg>#blur') !important; /* Firefox, Safari, Chrome*/
  filter: progid:DXImageTransform.Microsoft.Blur(Strength=$radius) !important; /* IE9 */
  -webkit-filter: blur($radius+px) !important; /* Chrome, Safari */
  -ms-filter: blur($radius+px) !important; /* IE */
  -o-filter: blur($radius+px) !important; /* Opera */
  -moz-filter: blur($radius+px) !important; /* Mozilla */
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}
}

@mixin webkit-autofill {
  input:-webkit-autofill            {@content}
  input:-webkit-autofill:hover      {@content}
  input:-webkit-autofill:focus      {@content}
  input:-webkit-autofill:active     {@content}
  textarea:-webkit-autofill         {@content}
  textarea:-webkit-autofill:hover   {@content}
  textarea:-webkit-autofill:focus   {@content}
  textarea:-webkit-autofill:active  {@content}
  select:-webkit-autofill           {@content}
  select:-webkit-autofill:hover     {@content}
  select:-webkit-autofill:focus     {@content}
  select:-webkit-autofill:active    {@content}
}

@mixin background-size($background-size) {
  background-size: $background-size;
  -o-background-size: $background-size;
  -ms-background-size: $background-size;
  -moz-background-size: $background-size;
  -webkit-background-size: $background-size;
  -khtml-background-size: $background-size;
}